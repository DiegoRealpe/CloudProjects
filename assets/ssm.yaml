name: SSM Component
description: Install SSM
schemaVersion: 1.0
phases:
  - name: build
    steps:
      - name: HelloWorldStep
        action: ExecuteBash
        inputs:
          commands:
            - echo 'Start of the build phase.'
      - name: OperatingSystemId
        action: ExecuteBash
        inputs:
          commands:
            - |
              FILE=/etc/os-release
              if [ -e $FILE ]; then
                . $FILE
                echo $ID
              elif [ -f /etc/centos-release ]; then
                echo centos
              elif [ -f /etc/redhat-release ]; then
                echo rhel
              else
                echo "Unable to identify the operating system. Failing build."
                exit 1
              fi
      - name: InstallSSMAgent
        action: ExecuteBash
        inputs:
          commands:
            - echo 'SSM agent installed'
            - sudo yum install -y amazon-ssm-agent || sudo apt-get install -y amazon-ssm-agent
            - sudo systemctl enable amazon-ssm-agent
            - sudo systemctl start amazon-ssm-agent
  - name: validate
    steps:
      - name: HelloWorldStep
        action: ExecuteBash
        inputs:
          commands:
            - echo 'Start of the the validate phase.'
      - name: GetJavaInstallPath
        action: ExecuteBash
        inputs:
          commands:
            - |
              RELEASE='{{build.OperatingSystemId.outputs.stdout}}'
              case "$RELEASE" in
                'amzn')
                  ARCH=`/usr/bin/arch`
                  echo "/usr/lib/jvm/java-17-amazon-corretto.$ARCH/bin/java"
                  ;;
                *)
                  echo /usr/lib/jvm/java-17-amazon-corretto/bin/java
                  ;;
              esac
      - name: ValidateInstallationJava
        action: Assert
        inputs:
          fileExists: '{{validate.GetJavaInstallPath.outputs.stdout}}'
      - name: ValidateInstallationJavac
        action: Assert
        inputs:
          fileExists: '{{validate.GetJavaInstallPath.outputs.stdout}}c'
  - name: test
    steps:
      - name: HelloWorldStep
        action: ExecuteBash
        inputs:
          commands:
            - echo 'Start of the test phase.'
